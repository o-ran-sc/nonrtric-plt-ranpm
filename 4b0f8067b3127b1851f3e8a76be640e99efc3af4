{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6e55f717_f77b0643",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002243
      },
      "writtenOn": "2023-09-18T10:57:27Z",
      "side": 1,
      "message": "Hi Ambrish, my 2 cent\u0027s worth.",
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f6fb87b_190e1a79",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1002243
      },
      "writtenOn": "2023-09-18T10:57:27Z",
      "side": 1,
      "message": "Do we need to test if a final int has changed?",
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8957dc37_40f72e8a",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1002202
      },
      "writtenOn": "2023-09-22T09:23:20Z",
      "side": 1,
      "message": "no further changes are required",
      "parentUuid": "9f6fb87b_190e1a79",
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "051f0f8c_050a2029",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1002202
      },
      "writtenOn": "2023-09-22T09:23:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8957dc37_40f72e8a",
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "059ff598_6c7eb35f",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-09-25T12:41:32Z",
      "side": 1,
      "message": "As denis mentions, this check doesn\u0027t make sense. NO_OF_OBJECTS is final.\nSo test is always 96\u003d\u003d96   ... which will never fail.",
      "range": {
        "startLine": 218,
        "startChar": 7,
        "endLine": 218,
        "endChar": 40
      },
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b17ca26d_1e17744e",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1002202
      },
      "writtenOn": "2023-09-25T15:32:44Z",
      "side": 1,
      "message": "There was a Sonar code smell where assert statement was missing from the test. That\u0027s why I added one that will never fail just to bypass the code smell. Another option is to bypass using @SuppressWarnings.",
      "parentUuid": "059ff598_6c7eb35f",
      "range": {
        "startLine": 218,
        "startChar": 7,
        "endLine": 218,
        "endChar": 40
      },
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b197d46_577ab9f7",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-09-26T09:27:39Z",
      "side": 1,
      "message": "suggest suppress the warning, or find something else to assert. \nThis isn\u0027t great as is.\n\nAnd same with the next assert.",
      "parentUuid": "b17ca26d_1e17744e",
      "range": {
        "startLine": 218,
        "startChar": 7,
        "endLine": 218,
        "endChar": 40
      },
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ed71214_53794f21",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1002240
      },
      "writtenOn": "2023-09-26T09:45:03Z",
      "side": 1,
      "message": "Ambrish can we use this assert? As it is getting creating/getting subscription one with start method\n\nassertNotEquals(influxStore.getSubscription(), null);",
      "parentUuid": "1b197d46_577ab9f7",
      "range": {
        "startLine": 218,
        "startChar": 7,
        "endLine": 218,
        "endChar": 40
      },
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec3ae18f_5ee2fc0a",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1002202
      },
      "writtenOn": "2023-09-26T12:30:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ed71214_53794f21",
      "range": {
        "startLine": 218,
        "startChar": 7,
        "endLine": 218,
        "endChar": 40
      },
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bc089be_93db94cc",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-09-25T12:41:32Z",
      "side": 1,
      "message": "1000 sec sleep?\nIs there a better way than this?",
      "range": {
        "startLine": 231,
        "startChar": 8,
        "endLine": 231,
        "endChar": 34
      },
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47c58870_bf0113f9",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1002202
      },
      "writtenOn": "2023-09-25T15:32:44Z",
      "side": 1,
      "message": "We can use:\n\nTimeUnit.MINUTES.sleep(number);\n\nBut it also requires handling the InterruptedException. That\u0027s why didn\u0027t change the original code.",
      "parentUuid": "9bc089be_93db94cc",
      "range": {
        "startLine": 231,
        "startChar": 8,
        "endLine": 231,
        "endChar": 34
      },
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afc57825_aa1b3d6d",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1000103
      },
      "writtenOn": "2023-09-26T09:27:39Z",
      "side": 1,
      "message": "1000 sec sleep in a test is not good. \nThere must be a better way to find something else to wait on.",
      "parentUuid": "47c58870_bf0113f9",
      "range": {
        "startLine": 231,
        "startChar": 8,
        "endLine": 231,
        "endChar": 34
      },
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e71b571a_4e6dcd9d",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1002202
      },
      "writtenOn": "2023-09-26T12:30:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "afc57825_aa1b3d6d",
      "range": {
        "startLine": 231,
        "startChar": 8,
        "endLine": 231,
        "endChar": 34
      },
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1907e58a_6ad98b46",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1002243
      },
      "writtenOn": "2023-09-18T10:57:27Z",
      "side": 1,
      "message": "Do we need to test if a final int has changed?",
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c878e015_734a0d94",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1002202
      },
      "writtenOn": "2023-09-22T09:23:20Z",
      "side": 1,
      "message": "no further changes are required",
      "parentUuid": "1907e58a_6ad98b46",
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73dd95b0_013597cc",
        "filename": "influxlogger/src/test/java/org/oran/pmlog/Integration.java",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1002202
      },
      "writtenOn": "2023-09-22T09:23:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c878e015_734a0d94",
      "revId": "4b0f8067b3127b1851f3e8a76be640e99efc3af4",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ]
}