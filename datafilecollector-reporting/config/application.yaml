spring:
  profiles:
    active: prod
management:
  endpoints:
    web:
      exposure:
        include: "loggers,logfile,health,info,metrics"
server:
  port: 8433
  ssl:
      key-store-type: JKS
      key-store-password: policy_agent
      key-store: config/keystore.jks
      key-password: policy_agent
      key-alias: policy_agent
logging:
  level:
    ROOT: WARN
    org.onap: WARN
    org.springframework: WARN
    org.springframework.data: WARN
    org.springframework.web.reactive.function.client.ExchangeFunctions: WARN
    org.oran.datafile: INFO

  file:
    name: /var/log/ONAP/application.log
app:
  collected-files-path: "/tmp/oran_datafile/"
  # Numer of worker threads. Increased number may increase throughput, but will require more executing resources.
  number-of-worker-treads: 200
   # If specified, and authorization token will be loaded from file and inserted in each HTTP header when using HTTP/HTTPS.
   # If the file name is empty, no authorization token is used
  auth-token-file:
  kafka:
    # KAFKA boostrap servers.
    # several redundant boostrap servers can be specified, separated by a comma ','.
    bootstrap-servers: localhost:9092
    # output topic
    collected-file-topic: collected-file
    client-id: datafile-1
    # input topic
    file-ready-event-topic: file-ready
      # Configures if oath2 tokens shall be used. If set to true, auth-token-file must also be configured
    use-oath-token: false
    ssl:
      key-store-type: PEM
      key-store-location:
      # key password is needed if the private key is encrypted
      key-store-password:
      trust-store-type: PEM
      trust-store-location:
  sftp:
    known-hosts-file-path:
    strict-host-key-checking: false
  ssl:
     key-store-password-file: /opt/app/datafile/config/ftps_keystore.pass
     key-store: /opt/app/datafile/config/ftps_keystore.p12
     trust-store-password-file: /opt/app/datafile/config/truststore.pass
     trust-store: /opt/app/datafile/config/truststore.jks
  s3:
    # S3 endpoint
    endpointOverride: http://localhost:9000
    # S3 access key ID
    accessKeyId: miniostorage
    # S3 password
    secretAccessKey: secret
    # The bucket to store collected files
    bucket: ropfiles
    # The bucket where DFC keeps lockfiles. This is to avoid that the same file is transfered more than once if
    # several load sharing DFC instances are running.
    locksBucket: dfclocks
springdoc:
  show-actuator: true
  swagger-ui.disable-swagger-default-url: true
